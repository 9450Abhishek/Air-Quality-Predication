{"ast":null,"code":"import _objectSpread from\"C:/Users/amanp/Downloads/Abhishek-Project/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Toaster}from'react-hot-toast';import Header from'./components/Header';import Dashboard from'./components/Dashboard';import PredictionForm from'./components/PredictionForm';import ModelStatus from'./components/ModelStatus';import Footer from'./components/Footer';import config from'./config';import'./index.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[activeTab,setActiveTab]=useState('dashboard');const[modelStatus,setModelStatus]=useState({isLoaded:false,isTraining:false,accuracy:null,lastTrained:null,isConnected:false});useEffect(()=>{// Check model status on component mount\ncheckModelStatus();},[]);const checkModelStatus=async()=>{try{const response=await fetch(\"\".concat(config.API_BASE_URL).concat(config.ENDPOINTS.HEALTH));const data=await response.json();setModelStatus(prev=>_objectSpread(_objectSpread({},prev),{},{isLoaded:data.model_loaded,isConnected:true}));}catch(error){console.error('Error checking model status:',error);setModelStatus(prev=>_objectSpread(_objectSpread({},prev),{},{isConnected:false}));}};const handleModelTrained=accuracy=>{setModelStatus(prev=>_objectSpread(_objectSpread({},prev),{},{isLoaded:true,accuracy,lastTrained:new Date().toISOString()}));};const renderContent=()=>{switch(activeTab){case'dashboard':return/*#__PURE__*/_jsx(Dashboard,{});case'predict':return/*#__PURE__*/_jsx(PredictionForm,{onModelTrained:handleModelTrained});case'status':return/*#__PURE__*/_jsx(ModelStatus,{status:modelStatus,onStatusUpdate:checkModelStatus});default:return/*#__PURE__*/_jsx(Dashboard,{});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50\",children:[/*#__PURE__*/_jsx(Toaster,{position:\"top-right\",toastOptions:{duration:4000,style:{background:'#363636',color:'#fff',borderRadius:'12px',padding:'16px'}}}),/*#__PURE__*/_jsx(Header,{activeTab:activeTab,onTabChange:setActiveTab,modelStatus:modelStatus}),/*#__PURE__*/_jsx(\"main\",{className:\"container mx-auto px-4 py-8\",children:renderContent()}),/*#__PURE__*/_jsx(Footer,{})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Toaster","Header","Dashboard","PredictionForm","ModelStatus","Footer","config","jsx","_jsx","jsxs","_jsxs","App","activeTab","setActiveTab","modelStatus","setModelStatus","isLoaded","isTraining","accuracy","lastTrained","isConnected","checkModelStatus","response","fetch","concat","API_BASE_URL","ENDPOINTS","HEALTH","data","json","prev","_objectSpread","model_loaded","error","console","handleModelTrained","Date","toISOString","renderContent","onModelTrained","status","onStatusUpdate","className","children","position","toastOptions","duration","style","background","color","borderRadius","padding","onTabChange"],"sources":["C:/Users/amanp/Downloads/Abhishek-Project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport Header from './components/Header';\r\nimport Dashboard from './components/Dashboard';\r\nimport PredictionForm from './components/PredictionForm';\r\nimport ModelStatus from './components/ModelStatus';\r\nimport Footer from './components/Footer';\r\nimport config from './config';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  const [activeTab, setActiveTab] = useState('dashboard');\r\n  const [modelStatus, setModelStatus] = useState({\r\n    isLoaded: false,\r\n    isTraining: false,\r\n    accuracy: null,\r\n    lastTrained: null,\r\n    isConnected: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Check model status on component mount\r\n    checkModelStatus();\r\n  }, []);\r\n\r\n  const checkModelStatus = async () => {\r\n    try {\r\n      const response = await fetch(`${config.API_BASE_URL}${config.ENDPOINTS.HEALTH}`);\r\n      const data = await response.json();\r\n      setModelStatus(prev => ({\r\n        ...prev,\r\n        isLoaded: data.model_loaded,\r\n        isConnected: true\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error checking model status:', error);\r\n      setModelStatus(prev => ({\r\n        ...prev,\r\n        isConnected: false\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleModelTrained = (accuracy) => {\r\n    setModelStatus(prev => ({\r\n      ...prev,\r\n      isLoaded: true,\r\n      accuracy,\r\n      lastTrained: new Date().toISOString()\r\n    }));\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (activeTab) {\r\n      case 'dashboard':\r\n        return <Dashboard />;\r\n      case 'predict':\r\n        return <PredictionForm onModelTrained={handleModelTrained} />;\r\n      case 'status':\r\n        return <ModelStatus status={modelStatus} onStatusUpdate={checkModelStatus} />;\r\n      default:\r\n        return <Dashboard />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50\">\r\n      <Toaster \r\n        position=\"top-right\"\r\n        toastOptions={{\r\n          duration: 4000,\r\n          style: {\r\n            background: '#363636',\r\n            color: '#fff',\r\n            borderRadius: '12px',\r\n            padding: '16px',\r\n          },\r\n        }}\r\n      />\r\n      \r\n      <Header \r\n        activeTab={activeTab} \r\n        onTabChange={setActiveTab}\r\n        modelStatus={modelStatus}\r\n      />\r\n      \r\n      <main className=\"container mx-auto px-4 py-8\">\r\n        {renderContent()}\r\n      </main>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}